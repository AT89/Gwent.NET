//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace Gwent.NET.Properties {
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [DebuggerNonUserCode()]
    [CompilerGenerated()]
    internal class Resources {
        
        private static ResourceManager resourceMan;
        
        private static CultureInfo resourceCulture;
        
        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static ResourceManager ResourceManager {
            get {
                if (ReferenceEquals(resourceMan, null)) {
                    ResourceManager temp = new ResourceManager("Gwent.NET.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-16&quot;?&gt;
        ///&lt;redxml&gt;
        ///	&lt;custom&gt;
        ///		&lt;gwint_battle_king_card_definitions&gt;
        ///		&lt;!--Northern Kingdoms Leaders--&gt;
        ///		
        ///			&lt;card	index=&quot;1001&quot;
        ///				title=&quot;gwint_name_foltest_copper&quot;
        ///				description=&quot;gwint_desc_foltest_copper&quot;
        ///				power=&quot;0&quot;
        ///				picture=&quot;nor_ldr_foltest_copper&quot;
        ///				faction_index=&quot;F_NORTHERN_KINGDOM&quot; &gt;
        ///				&lt;type_flags&gt;
        ///				&lt;/type_flags&gt;
        ///				&lt;effect_flags&gt;
        ///					&lt;flag name=&quot;CP_PICK_FOG_CARD&quot;/&gt;
        ///				&lt;/effect_flags&gt;
        ///			&lt;/card&gt;
        ///		
        ///			&lt;card	index=&quot;1002&quot;
        ///				title=&quot;gw [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string def_gwint_battle_king_cards {
            get {
                return ResourceManager.GetString("def_gwint_battle_king_cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-16&quot;?&gt;
        ///&lt;redxml&gt;
        ///	&lt;custom&gt;
        ///		&lt;gwint_card_definitions_final&gt;
        ///
        ///&lt;!--
        ///============================================= SPECIAL CARDS (Shared between all factions) =====================================================
        ///--&gt;
        ///
        ///		&lt;card   index=&quot;0&quot;
        ///		    title=&quot;gwint_name_dummy&quot;
        ///			description=&quot;gwint_desc_dummy&quot;
        ///			power=&quot;0&quot;
        ///			picture=&quot;spc_dummy&quot;
        ///			faction_index=&quot;F_NEUTRAL&quot; &gt;
        ///			&lt;type_flags&gt;
        ///				&lt;flag name=&quot;TYPE_SPELL&quot; /&gt;
        ///				&lt;flag name=&quot;TYPE_FRIENDLY_EFFECT&quot; /&gt;
        ///			&lt;/ty [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string def_gwint_cards_final {
            get {
                return ResourceManager.GetString("def_gwint_cards_final", resourceCulture);
            }
        }
    }
}
